#!/usr/bin/python3
#+
# Example use of python_freetype: report on which code blocks
# are covered by a given font. Invoke this script as follows:
#
#     code_coverage <fontspec>
#
# where <fontspec> is the Fontconfig pattern string identifying the
# font to use; for the purposes of this script, typically a family
# name will be sufficient. The output will consist of one line for
# each Unicode code block for which the fontâ€™s default character
# map defines at least one character, showing how many characters
# are defined in that block and the size of the block.
#
# Copyright 2015 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import freetype
from itertools import \
    filterfalse

#+
# Data taken from Unicode 7.0.0 spec
#-

class CodeBlock :
    "describes a Unicode code block by its name and the bounds of its code range."

    def __init__(self, name, lo, hi) :
        self.name = name
        self.lo = lo
        self.hi = hi
    #end __init__

#end CodeBlock

code_blocks = \
    (
        CodeBlock("C0 Controls", 0, 0x1F),
        CodeBlock("ASCII", 0x20, 0x7F),
        CodeBlock("C1 Controls", 0x80, 0x9F),
        CodeBlock("Latin-1", 0xA0, 0xFF),
        CodeBlock("Latin Extended-A", 0x0100, 0x017F),
        CodeBlock("Latin Extended-B", 0x0180, 0x024F),
        CodeBlock("IPA Extensions", 0x0250, 0x02AF),
        CodeBlock("Spacing Modifier Letters", 0x02B0, 0x02FF),
        CodeBlock("Combining Diacritical Marks", 0x0300, 0x036F),
        CodeBlock("Greek and Coptic", 0x0370, 0x03FF),
        CodeBlock("Cyrillic", 0x0400, 0x04FF),
        CodeBlock("Cyrillic Supplement", 0x0500, 0x052F),
        CodeBlock("Armenian", 0x0530, 0x058F),
        CodeBlock("Hebrew", 0x0590, 0x05FF),
        CodeBlock("Arabic", 0x0600, 0x06FF),
        CodeBlock("Syriac", 0x0700, 0x074F),
        CodeBlock("Arabic Supplement", 0x0750, 0x077F),
        CodeBlock("Thaana", 0x0780, 0x07BF),
        CodeBlock("NKo", 0x07C0, 0x07FF),
        CodeBlock("Samaritan", 0x0800, 0x083F),
        CodeBlock("Mandaic", 0x0840, 0x085F),
        CodeBlock("Arabic Extended-A", 0x08A0, 0x08FF),
        CodeBlock("Devanagari", 0x0900, 0x097F),
        CodeBlock("Bengali", 0x0980, 0x09FF),
        CodeBlock("Gurmukhi", 0x0A00, 0x0A7F),
        CodeBlock("Gujarati", 0x0A80, 0x0AFF),
        CodeBlock("Oriya", 0x0B00, 0x0B7F),
        CodeBlock("Tamil", 0x0B80, 0x0BFF),
        CodeBlock("Telugu", 0x0C00, 0x0C7F),
        CodeBlock("Kannada", 0x0C80, 0x0CFF),
        CodeBlock("Malayalam", 0x0D00, 0x0D7F),
        CodeBlock("Sinhala", 0x0D80, 0x0DFF),
        CodeBlock("Thai", 0x0E00, 0x0E7F),
        CodeBlock("Lao", 0x0E80, 0x0EFF),
        CodeBlock("Tibetan", 0x0F00, 0x0FFF),
        CodeBlock("Myanmar", 0x1000, 0x109F),
        CodeBlock("Georgian", 0x10A0, 0x10FF),
        CodeBlock("Hangul Jamo", 0x1100, 0x11FF),
        CodeBlock("Ethiopic", 0x1200, 0x137F),
        CodeBlock("Ethiopic Supplement", 0x1380, 0x139F),
        CodeBlock("Cherokee", 0x13A0, 0x13FF),
        CodeBlock("Unified Canadian Aboriginal Syllabics", 0x1400, 0x167F),
        CodeBlock("Ogham", 0x1680, 0x169F),
        CodeBlock("Runic", 0x16A0, 0x16FF),
        CodeBlock("Tagalog", 0x1700, 0x171F),
        CodeBlock("Hanunoo", 0x1720, 0x173F),
        CodeBlock("Buhid", 0x1740, 0x175F),
        CodeBlock("Tagbanwa", 0x1760, 0x177F),
        CodeBlock("Khmer", 0x1780, 0x17FF),
        CodeBlock("Mongolian", 0x1800, 0x18AF),
        CodeBlock("Unified Canadian Aboriginal Syllabics Extended", 0x18B0, 0x18FF),
        CodeBlock("Limbu", 0x1900, 0x194F),
        CodeBlock("Tai Le", 0x1950, 0x197F),
        CodeBlock("New Tai Lue", 0x1980, 0x19DF),
        CodeBlock("Khmer Symbols", 0x19E0, 0x19FF),
        CodeBlock("Buginese", 0x1A00, 0x1A1F),
        CodeBlock("Tai Tham", 0x1A20, 0x1AAF),
        CodeBlock("Combining Diacritical Marks Extended", 0x1AB0, 0x1AFF),
        CodeBlock("Balinese", 0x1B00, 0x1B7F),
        CodeBlock("Sundanese", 0x1B80, 0x1BBF),
        CodeBlock("Batak", 0x1BC0, 0x1BFF),
        CodeBlock("Lepcha", 0x1C00, 0x1C4F),
        CodeBlock("Ol Chiki", 0x1C50, 0x1C7F),
        CodeBlock("Sundanese Supplement", 0x1CC0, 0x1CCF),
        CodeBlock("Vedic Extensions", 0x1CD0, 0x1CFF),
        CodeBlock("Phonetic Extensions", 0x1D00, 0x1D7F),
        CodeBlock("Phonetic Extensions Supplement", 0x1D80, 0x1DBF),
        CodeBlock("Combining Diacritical Marks Supplement", 0x1DC0, 0x1DFF),
        CodeBlock("Latin Extended Additional", 0x1E00, 0x1EFF),
        CodeBlock("Greek Extended", 0x1F00, 0x1FFF),
        CodeBlock("General Punctuation", 0x2000, 0x206F),
        CodeBlock("Superscripts and Subscripts", 0x2070, 0x209F),
        CodeBlock("Currency Symbols", 0x20A0, 0x20CF),
        CodeBlock("Combining Diacritical Marks for Symbols", 0x20D0, 0x20FF),
        CodeBlock("Letterlike Symbols", 0x2100, 0x214F),
        CodeBlock("Number Forms", 0x2150, 0x218F),
        CodeBlock("Arrows", 0x2190, 0x21FF),
        CodeBlock("Mathematical Operators", 0x2200, 0x22FF),
        CodeBlock("Miscellaneous Technical", 0x2300, 0x23FF),
        CodeBlock("Control Pictures", 0x2400, 0x243F),
        CodeBlock("Optical Character Recognition", 0x2440, 0x245F),
        CodeBlock("Enclosed Alphanumerics", 0x2460, 0x24FF),
        CodeBlock("Box Drawing", 0x2500, 0x257F),
        CodeBlock("Block Elements", 0x2580, 0x259F),
        CodeBlock("Geometric Shapes", 0x25A0, 0x25FF),
        CodeBlock("Miscellaneous Symbols", 0x2600, 0x26FF),
        CodeBlock("Dingbats", 0x2700, 0x27BF),
        CodeBlock("Miscellaneous Mathematical Symbols-A", 0x27C0, 0x27EF),
        CodeBlock("Supplemental Arrows-A", 0x27F0, 0x27FF),
        CodeBlock("Braille Patterns", 0x2800, 0x28FF),
        CodeBlock("Supplemental Arrows-B", 0x2900, 0x297F),
        CodeBlock("Miscellaneous Mathematical Symbols-B", 0x2980, 0x29FF),
        CodeBlock("Supplemental Mathematical Operators", 0x2A00, 0x2AFF),
        CodeBlock("Miscellaneous Symbols and Arrows", 0x2B00, 0x2BFF),
        CodeBlock("Glagolitic", 0x2C00, 0x2C5F),
        CodeBlock("Latin Extended-C", 0x2C60, 0x2C7F),
        CodeBlock("Coptic", 0x2C80, 0x2CFF),
        CodeBlock("Georgian Supplement", 0x2D00, 0x2D2F),
        CodeBlock("Tifinagh", 0x2D30, 0x2D7F),
        CodeBlock("Ethiopic Extended", 0x2D80, 0x2DDF),
        CodeBlock("Cyrillic Extended-A", 0x2DE0, 0x2DFF),
        CodeBlock("Supplemental Punctuation", 0x2E00, 0x2E7F),
        CodeBlock("CJK Radicals Supplement", 0x2E80, 0x2EFF),
        CodeBlock("Kangxi Radicals", 0x2F00, 0x2FDF),
        CodeBlock("Ideographic Description Characters", 0x2FF0, 0x2FFF),
        CodeBlock("CJK Symbols and Punctuation", 0x3000, 0x303F),
        CodeBlock("Hiragana", 0x3040, 0x309F),
        CodeBlock("Katakana", 0x30A0, 0x30FF),
        CodeBlock("Bopomofo", 0x3100, 0x312F),
        CodeBlock("Hangul Compatibility Jamo", 0x3130, 0x318F),
        CodeBlock("Kanbun", 0x3190, 0x319F),
        CodeBlock("Bopomofo Extended", 0x31A0, 0x31BF),
        CodeBlock("CJK Strokes", 0x31C0, 0x31EF),
        CodeBlock("Katakana Phonetic Extensions", 0x31F0, 0x31FF),
        CodeBlock("Enclosed CJK Letters and Months", 0x3200, 0x32FF),
        CodeBlock("CJK Compatibility", 0x3300, 0x33FF),
        CodeBlock("CJK Unified Ideographs Extension A", 0x3400, 0x4DB5),
        CodeBlock("Yijing Hexagram Symbols", 0x4DC0, 0x4DFF),
        CodeBlock("CJK Unified Ideographs", 0x4E00, 0x9FCC),
        CodeBlock("Yi Syllables", 0xA000, 0xA48F),
        CodeBlock("Yi Radicals", 0xA490, 0xA4CF),
        CodeBlock("Lisu", 0xA4D0, 0xA4FF),
        CodeBlock("Vai", 0xA500, 0xA63F),
        CodeBlock("Cyrillic Extended-B", 0xA640, 0xA69F),
        CodeBlock("Bamum", 0xA6A0, 0xA6FF),
        CodeBlock("Modifier Tone Letters", 0xA700, 0xA71F),
        CodeBlock("Latin Extended-D", 0xA720, 0xA7FF),
        CodeBlock("Syloti Nagri", 0xA800, 0xA82F),
        CodeBlock("Common Indic Number Forms", 0xA830, 0xA83F),
        CodeBlock("Phags-pa", 0xA840, 0xA87F),
        CodeBlock("Saurashtra", 0xA880, 0xA8DF),
        CodeBlock("Devanagari Extended", 0xA8E0, 0xA8FF),
        CodeBlock("Kayah Li", 0xA900, 0xA92F),
        CodeBlock("Rejang", 0xA930, 0xA95F),
        CodeBlock("Hangul Jamo Extended-A", 0xA960, 0xA97F),
        CodeBlock("Javanese", 0xA980, 0xA9DF),
        CodeBlock("Myanmar Extended-B", 0xA9E0, 0xA9FF),
        CodeBlock("Cham", 0xAA00, 0xAA5F),
        CodeBlock("Myanmar Extended-A", 0xAA60, 0xAA7F),
        CodeBlock("Tai Viet", 0xAA80, 0xAADF),
        CodeBlock("Meetei Mayek Extensions", 0xAAE0, 0xAAFF),
        CodeBlock("Ethiopic Extended-A", 0xAB00, 0xAB2F),
        CodeBlock("Latin Extended-E", 0xAB30, 0xAB6F),
        CodeBlock("Meetei Mayek", 0xABC0, 0xABFF),
        CodeBlock("Hangul Syllables", 0xAC00, 0xD7A3),
        CodeBlock("Hangul Jamo Extended-B", 0xD7B0, 0xD7FF),
        CodeBlock("High Surrogates", 0xD800, 0xDB7F), # shouldn't occur?
        CodeBlock("High Private Use Surrogates", 0xDB80, 0xDBFF),
        CodeBlock("Low Surrogates", 0xDC00, 0xDFFF), # shouldn't occur?
        CodeBlock("Private Use Area", 0xE000, 0xF8FF),
        CodeBlock("CJK Compatibility Ideographs", 0xF900, 0xFAFF),
        CodeBlock("Alphabetic Presentation Forms", 0xFB00, 0xFB4F),
        CodeBlock("Arabic Presentation Forms-A", 0xFB50, 0xFDFF),
        CodeBlock("Variation Selectors", 0xFE00, 0xFE0F),
        CodeBlock("Vertical Forms", 0xFE10, 0xFE1F),
        CodeBlock("Combining Half Marks", 0xFE20, 0xFE2F),
        CodeBlock("CJK Compatibility Forms", 0xFE30, 0xFE4F),
        CodeBlock("Small Form Variants", 0xFE50, 0xFE6F),
        CodeBlock("Arabic Presentation Forms-B", 0xFE70, 0xFEFF),
        CodeBlock("Halfwidth and Fullwidth Forms", 0xFF00, 0xFFEF),
        CodeBlock("Specials", 0xFFF0, 0xFFFF),
        CodeBlock("Linear B Syllabary", 0x10000, 0x1007F),
        CodeBlock("Linear B Ideograms", 0x10080, 0x100FF),
        CodeBlock("Aegean Numbers", 0x10100, 0x1013F),
        CodeBlock("Ancient Greek Numbers", 0x10140, 0x1018F),
        CodeBlock("Ancient Symbols", 0x10190, 0x101CF),
        CodeBlock("Phaistos Disc", 0x101D0, 0x101FF),
        CodeBlock("Lycian", 0x10280, 0x1029F),
        CodeBlock("Carian", 0x102A0, 0x102DF),
        CodeBlock("Coptic Epact Numbers", 0x102E0, 0x102FF),
        CodeBlock("Old Italic", 0x10300, 0x1032F),
        CodeBlock("Gothic", 0x10330, 0x1034F),
        CodeBlock("Old Permic", 0x10350, 0x1037F),
        CodeBlock("Ugaritic", 0x10380, 0x1039F),
        CodeBlock("Old Persian", 0x103A0, 0x103DF),
        CodeBlock("Deseret", 0x10400, 0x1044F),
        CodeBlock("Shavian", 0x10450, 0x1047F),
        CodeBlock("Osmanya", 0x10480, 0x104AF),
        CodeBlock("Elbasan", 0x10500, 0x1052F),
        CodeBlock("Caucasian Albanian", 0x10530, 0x1056F),
        CodeBlock("Linear A", 0x10600, 0x1077F),
        CodeBlock("Cypriot Syllabary", 0x10800, 0x1083F),
        CodeBlock("Imperial Aramaic", 0x10840, 0x1085F),
        CodeBlock("Palmyrene", 0x10860, 0x1087F),
        CodeBlock("Nabataean", 0x10880, 0x108AF),
        CodeBlock("Phoenician", 0x10900, 0x1091F),
        CodeBlock("Lydian", 0x10920, 0x1093F),
        CodeBlock("Meroitic Hieroglyphs", 0x10980, 0x1099F),
        CodeBlock("Meroitic Cursive", 0x109A0, 0x109FF),
        CodeBlock("Kharoshthi", 0x10A00, 0x10A5F),
        CodeBlock("Old South Arabian", 0x10A60, 0x10A7F),
        CodeBlock("Old North Arabian", 0x10A80, 0x10A9F),
        CodeBlock("Manichaean", 0x10AC0, 0x10AFF),
        CodeBlock("Avestan", 0x10B00, 0x10B3F),
        CodeBlock("Inscriptional Parthian", 0x10B40, 0x10B5F),
        CodeBlock("Inscriptional Pahlavi", 0x10B60, 0x10B7F),
        CodeBlock("Psalter Pahlavi", 0x10B80, 0x10BAF),
        CodeBlock("Old Turkic", 0x10C00, 0x10C4F),
        CodeBlock("Rumi Numeral Symbols", 0x10E60, 0x10E7F),
        CodeBlock("Brahmi", 0x11000, 0x1107F),
        CodeBlock("Kaithi", 0x11080, 0x110CF),
        CodeBlock("Sora Sompeng", 0x110D0, 0x110FF),
        CodeBlock("Chakma", 0x11100, 0x1114F),
        CodeBlock("Mahajani", 0x11150, 0x1117F),
        CodeBlock("Sharada", 0x11180, 0x111DF),
        CodeBlock("Sinhala Archaic Numbers", 0x111E0, 0x111FF),
        CodeBlock("Khojki", 0x11200, 0x1124F),
        CodeBlock("Khudawadi", 0x112B0, 0x112FF),
        CodeBlock("Grantha", 0x11300, 0x1137F),
        CodeBlock("Tirhuta", 0x11480, 0x114DF),
        CodeBlock("Siddham", 0x11580, 0x115FF),
        CodeBlock("Modi", 0x11600, 0x1165F),
        CodeBlock("Takri", 0x11680, 0x116CF),
        CodeBlock("Warang Citi", 0x118A0, 0x118FF),
        CodeBlock("Pau Cin Hau", 0x11AC0, 0x11AFF),
        CodeBlock("Cuneiform", 0x12000, 0x123FF),
        CodeBlock("Cuneiform Numbers and Punctuation", 0x12400, 0x1247F),
        CodeBlock("Egyptian Hieroglyphs", 0x13000, 0x1342F),
        CodeBlock("Bamum Supplement", 0x16800, 0x16A3F),
        CodeBlock("Mro", 0x16A40, 0x16A6F),
        CodeBlock("Bassa Vah", 0x16AD0, 0x16AFF),
        CodeBlock("Pahawh Hmong", 0x16B00, 0x16B8F),
        CodeBlock("Miao", 0x16F00, 0x16F9F),
        CodeBlock("Kana Supplement", 0x1B000, 0x1B0FF),
        CodeBlock("Duployan", 0x1BC00, 0x1BC9F),
        CodeBlock("Shorthand Format Controls", 0x1BCA0, 0x1BCAF),
        CodeBlock("Byzantine Musical Symbols", 0x1D000, 0x1D0FF),
        CodeBlock("Musical Symbols", 0x1D100, 0x1D1FF),
        CodeBlock("Ancient Greek Musical Notation", 0x1D200, 0x1D24F),
        CodeBlock("Tai Xuan Jing Symbols", 0x1D300, 0x1D35F),
        CodeBlock("Counting Rod Numerals", 0x1D360, 0x1D37F),
        CodeBlock("Mathematical Alphanumeric Symbols", 0x1D400, 0x1D7FF),
        CodeBlock("Mende Kikakui", 0x1E800, 0x1E8DF),
        CodeBlock("Arabic Mathematical Alphabetic Symbols", 0x1EE00, 0x1EEFF),
        CodeBlock("Mahjong Tiles", 0x1F000, 0x1F02F),
        CodeBlock("Domino Tiles", 0x1F030, 0x1F09F),
        CodeBlock("Playing Cards", 0x1F0A0, 0x1F0FF),
        CodeBlock("Enclosed Alphanumeric Supplement", 0x1F100, 0x1F1FF),
        CodeBlock("Enclosed Ideographic Supplement", 0x1F200, 0x1F2FF),
        CodeBlock("Miscellaneous Symbols and Pictographs", 0x1F300, 0x1F5FF),
        CodeBlock("Emoticons", 0x1F600, 0x1F64F),
        CodeBlock("Ornamental Dingbats", 0x1F650, 0x1F67F),
        CodeBlock("Transport and Map Symbols", 0x1F680, 0x1F6FF),
        CodeBlock("Alchemical Symbols", 0x1F700, 0x1F77F),
        CodeBlock("Geometric Shapes Extended", 0x1F780, 0x1F7FF),
        CodeBlock("Supplemental Arrows-C", 0x1F800, 0x1F8FF),
        CodeBlock("Unassigned", 0x1FF80, 0x1FFFF),
        CodeBlock("CJK Unified Ideographs Extension B", 0x20000, 0x2A6D6),
        CodeBlock("CJK Unified Ideographs Extension C", 0x2A700, 0x2B734),
        CodeBlock("CJK Unified Ideographs Extension D", 0x2B740, 0x2B81D),
        CodeBlock("CJK Compatibility Ideographs Supplement", 0x2F800, 0x2FA1F),
        CodeBlock("Tags", 0xE0000, 0xE007F),
        CodeBlock("Variation Selectors Supplement", 0xE0100, 0xE01EF),
        CodeBlock("Supplementary Private Use Area-A", 0xFFF80, 0xFFFFF),
        CodeBlock("Supplementary Private Use Area-B", 0x10FF80, 0x10FFFF),
    )
max_name_len = max(len(block.name) for block in code_blocks)

#+
# Mainline
#-

if len(sys.argv) != 2 :
    raise RuntimeError("need one arg, the Fontconfig pattern string")
#end if

lib = freetype.Library()
face = lib.find_face(sys.argv[1])
sys.stdout.write("font family %s style %s filename %s\n" % (face.family_name, face.style_name, face.filename))
for block in code_blocks :
    block_len = block.hi + 1 - block.lo
    count = len(list(filterfalse(lambda g : g == 0, (face.get_char_index(c) for c in range(block.lo, block.hi + 1)))))
    if count != 0 :
        sys.stdout.write("%%%ds: %%d/%%d\n" % max_name_len % (block.name, count, block_len))
    #end if
#end for
